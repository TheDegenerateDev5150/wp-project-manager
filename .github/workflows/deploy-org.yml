name: Deploy to WordPress.org
on:
  push:
    tags:
      - "*"
jobs:
  tag:
    name: Deploy plugin for new Tag
    runs-on: ubuntu-latest
    steps:
   
      - uses: actions/checkout@v4
      - name: Use Node.js 12.1.0
        uses: actions/setup-node@v4
        with:
          node-version: 12.1.0
      - uses: actions/checkout@master
      - name: Npm install and build
        run: |
          rm -r package-lock.json
          npm i
          npm run build
          npm run makepot
      - name: Use desired version of php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
      - name: Composer install and build # Remove or modify this step as needed
        run: |
          composer install
          composer update
          composer dump-autoload -o
          composer install --no-dev
          composer dump-autoload -o
      - name: WordPress Plugin Deploy
        uses: 10up/action-wordpress-plugin-deploy@stable
        with:
          dry-run: true
          generate-zip: true
        env:
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          SLUG: wedevs-project-manager
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          # Note, this is an exception to action secrets: GH_TOKEN is always available and provides access to
          # the current repository this action runs in.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Get the URL for uploading assets to the current release.
          upload_url: ${{ steps.create_release.outputs.upload_url }}

          # Provide the path to the file generated in the previous step using the output.
          asset_path: ${{ steps.deploy.outputs.zip-path }}

          # Provide what the file should be named when attached to the release (plugin-name.zip)
          asset_name: wedevs-project-manager.zip

          # Provide the file type.
          asset_content_type: application/zip
